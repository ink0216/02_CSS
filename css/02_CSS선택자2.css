/* css파일은 html에서 style태그 내부라고 생각하고 코딩하면 된다.*/
/* h1 태그 글자색 */
h1{ color : red;}
code{
    background-color: pink;
    font-weight: bold; 
    display : block;  /* block 형식으로 변경 */
}


/* ----------기본 속성 선택자----------------- */
/* div 태그 중 name 속성 값이 "name-1"인 요소에 배경색 green 추가해보자! */
/* 선택자[속성명="속성값"]{CSS 코드;} */
div[name="name-1"]{background-color: green;}

/* div 태그 중 name 속성의 값이 name-2인 요소만 선택 */
div[name="name-2"]{background-color: orangered;}
/* 모든 div 요소의 글자색을 흰색으로 변경 */
div{color: yellow;} /* gray=grey=회색 */

/* p 태그 중 data 속성의 값이 "data-1"인 요소만 배경색을 red로 하겠다 */
p[data="data-1"]{background-color: red;}

/* 내용이 p3, p4인 요소를 선택해서 배경색을 blue로 하고 싶다 */
p[data="data-2"]{background-color: blue;}
/* p 태그의 글씨를 흰색으로 하고 싶다 */
p{color: white;}

/* 내용이 div1, div2, p2, p3의 폰트 사이즈를 50px로 바꾸고 싶다 */
/* 모든 요소 중에서 name 속성 값이 "name-1"인 요소 글자 크기를 50px로 바꾸는 걸로 하면 된다. 걔네들만 같은 클래스로 지정해서 해도 됨*/
/* *[name="name-1"]{font-size: 50px;} */
[name="name-1"]{font-size: 50px;}
/* name 속성 값이 "name-1"인 요소 모두 선택됨 */
/* 모든 요소를 할 때 *를 생략해도 됨. 선택자 부분에 아무것도 안 쓰면 자동으로 *(모든 요소)로 지정이 됨*/


/* -----------자식 선택자( > )------------- */
/* 선택자1 > 선택자 2 {CSS 코드;} */
#parent1 {background-color: skyblue;}
#parent1 > li{background-color: gold;}
/* 색종이 두장이 겹쳐지듯 */
/* 자식 2, 자식4의 글자색을 red로 하고 싶다 */
/* 선택자의 하위인 경우, 선택자( > )를 연이어 작성할 수 있다 */
#parent1 > li> span {color:red;}

/* ------------후손 선택자( ) ------------- */
/* 아이디가 parent2인 요소의 후손 중 모든 p태그를 선택해라 */
/* 
# : id
. : class
* : 모든
선택자1 선택자2 {CSS 코드;} */
#parent2 p {background-color: lightcoral;}
#parent2 div p{color: blue;}

/* 반응 선택자 */
.test-div{
    /* 3px 실선 테두리? 검정색 */
    border: 3px solid black;
    width: 200px;
    height: 200px;
    /* 16진수 표기법 */
    background-color: #ddd; 
    /* 아래쪽 요소와 30px만큼의 간격을 추가 */
    margin-bottom: 30px;
    /* 마우스 커서를 손가락 모양 커서(pointer, 클릭 가능한 파트에 적용)로 변경하겠다 */
    cursor: pointer;
}

/* #activeBox{
    background-color: yellow;
} */
/* #activeBox가 클릭되고 있을 때만 노랑으로 바뀌게 하려면 아래처럼... */
#activeBox:active{
    background-color: yellow;
}
/* #hoverBox에 마우스가 올라왔을 때 */

/* #hoverBox:hover{
    background-color: pink;
} */

/* #hoverBox에 마우스가 올라왔을 때 이미지가 나타나도록 하기 */
#hoverBox:hover{
    background-image: url('../images/cats/cat5.jpg');
    /* 한 단계 상위로 올라가서(..) 다른 폴더로 이동 */
    background-size: cover;
    /* 배경 이미지의 크기를 지정할 수 있음 */
}

/* -----------  상태 선택자 */
/* :focus */
#input1:focus{
    /* border=요소의 기본 테두리 */
    border-color : red;
    /* outline=초점이 맞춰졌을 때 요소 바깥에 생기는 선 */
    outline-color : greenyellow; 
}
#input1{
    /* 요소 자체의 기본 테두리 */
    border-color : red;
}
/* :checked */
#input2:checked{
    width: 30px;
    height: 30px;
    background-color: red;
    /* radio, checkbox 선택 시 보이는 표시는 
    배경이 아닌 이미지이기 때문에
    배경색을 지정해도 적용되지 않는다. 그냥 파란색으로 그대로이다 */
}

/* :enabled / :disabled */
.input3:enabled{background-color: skyblue;}
.input3:disabled{background-color: lightcoral;}

/* -------------동위 선택자------------ */

/* + : 바로 뒤 형제요소 하나 선택하는 것 */
#div1 + dov{
    background-color: yellow;
}
/* #div + dov{
    background-color: yellow;
}  : */

/* ~ : 뒤에 존재하는 형제 요소들 중 해당하는 요소들을 다 선택하는 것 */
/* 4번 5번만 선택하고 싶다 */
/* #div3 ~div{
    background-color: springgreen;
} :  div3의 뒤에 있는 형제요소 중에서 중간의 p 태그 말고 div 태그만 선택하겠다*/
#div3 ~div{
    background-color: springgreen;
}
/* --------체크박스 만들기----------- */
/* --------1. lable 요소를 체크박스 모양으로 만들기------------ */
#check + label{
    width: 30px;
    height: 30px;
    border: 1px solid black;
/* border=테두리 */
/* 라벨은 inline의 특징을 가져서 너비, 높이를 지정할 수 없음 */
/* 크기 지정o, 한 줄에 배치(수평 분할) */
display: inline-block;

cursor: pointer;  
/* 마우스 포인터 모양을 손가락으로 변경 */
border-radius : 20%;
user-select: none; /* 오른쪽 네모 클릭하면 왼쪽네모와의 사이에 파란색 나오는 것 방지 */
/* 사용자가 선택을 못하게 함 */
}
/* 2. 체크박스가 체크 되었을 때 label에 체크박스 이미지를 출력하는 것 */
#check:checked + label{
    background-image: url('../images/checkbox.png');
    background-size : cover;  /* cover=이미지 크기를 요소에 맞춰라 */
}
/* 체크된 체크박스 바로 뒤의 라벨 하나에 적용될 것 */

/* 3. 파란색 체크박스를 존재는 하지만 보이지 않게 처리 */
#check{
    display : none;
    /* display: 표시할래 안할래?// none : 표시하지 않겠다 */
}
